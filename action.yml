name: Update Gruntwork Pipelines PR Status
description: "Update Gruntwork Pipelines PR Status"
inputs:
  step_name:
    description: "The name of the step to update"
    required: true
  step_status:
    description: "The status of the step to update"
    default: 'not_started'
  step_details:
    description: "Details or output from the step"
    default: ''

runs:
  using: composite
  steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      continue-on-error: true
      with:
        name: state

    - name: Calculate Table
      id: calculate
      shell: bash
      run: |
        function statusToIcon() {
          status=$1
          if [[ "$status" = "not_started" ]]; then
            echo "⚪"
            return
          fi
          if [[ "$status" = "in_progress" ]]; then
            echo "🔄"
            return
          fi
          if [[ "$status" = "success" ]]; then
            echo "✅"
            return
          fi
          if [[ "$status" = "failed" ]]; then
            echo "❌"
            return
          fi
          echo $status
        }
        if [[ ! -f "state.json" ]]; then
          echo '{}' > state.json
        fi
        icon=$(statusToIcon ${{ inputs.step_status }})
        jq '.data += { "${{ inputs.step_name }}": { "name": "${{ inputs.step_name }}", "status": "${{ inputs.step_status }}", "statusIcon": "'$icon'"", details": "${{ inputs.step_details }}" } }' state.json > updated_state.json
        cat state.json
        cat updated_state.json
        mv updated_state.json state.json
        echo "## Gruntwork Pipelines Status \n" > message.txt
        jq -r '.[]' state.json |  # Replace with your JSON path
          while read item; do
            echo $item
            name=$(echo "$item" | jq '.name')
            statusIcon=$(echo "$item" | jq '.statusIcon')
            details=$(echo "$item" | jq '.details')
            echo "[$statusIcon] $name\n" >> message.txt
          done

        echo "message=$(cat message.txt)" >> "$GITHUB_OUTPUT"

    - name: Create comment
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        message: steps.calculate.outputs.message

    - name: Upload data as artifact
      uses: actions/upload-artifact@v4
      with:
        name: state
        path: state.json